name: Build Images

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  matrix-gen:
    name: Generate Matrix
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Install dependencies
      run: sudo pacman -Sy yq jq git --needed --noconfirm

    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate matrix
      id: set-matrix
      run: |
        MATRIX=$(yq '.devices' devices.yaml | jq -c 'map(.packages |= flatten | {device: .device, vndk: .vndk, packages: (.packages | join(" "))})')
        echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

  build-rootfs:
    name: Build for ${{ matrix.device }}-api${{ matrix.vndk }}
    env:
      ROOTFS: ${{ matrix.device }}-api${{ matrix.vndk }}
    needs: matrix-gen
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        include: ${{ fromJson(needs.matrix-gen.outputs.matrix) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Pull rootfs
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release download -R "aarchd/rootfs" -p "rootfs.tar.gz"
        mkdir -p ${ROOTFS}
        sudo tar -xzf rootfs.tar.gz -C ${ROOTFS}

    - name: Install arch-install-scripts
      run: |
          git clone https://github.com/aarchd/arch-install-scripts --depth 1
          sudo make -j4 -C arch-install-scripts install

    - name: Install packages
      run: |
        sudo mv ${ROOTFS}/etc/pacman.d/mirrorlist ${ROOTFS}/etc/pacman.d/mirrorlist.bak
        echo "Server = http://ca.us.mirror.archlinuxarm.org/aarch64/\$repo" | sudo tee ${ROOTFS}/etc/pacman.d/mirrorlist
        sudo mount --bind $PWD ${ROOTFS}/mnt
        sudo arch-chroot ${ROOTFS} /bin/bash -c \
        "pacman -Syyu --needed --noconfirm ${{ matrix.packages }}"

    - name: Configure rootfs
      run: |
        sudo arch-chroot ${ROOTFS} /bin/bash -c \
        "/mnt/scripts/configure.sh"

    - name: Install Android rootfs
      run: |
        sudo ./scripts/install_android_rootfs.sh ${ROOTFS}

    - name: Clean rootfs
      run: |
        sudo arch-chroot ${ROOTFS} /bin/bash -c \
        "/mnt/scripts/clean.sh"
        sudo umount ${ROOTFS}/mnt

    - name: Create image
      run: |
        git clone https://github.com/anestisb/android-simg2img.git --depth 1
        sudo make -j4 -C android-simg2img install
        sudo ./scripts/create_image.sh ${ROOTFS}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rootfs-${{ matrix.device }}-api${{ matrix.vndk }}
        path: aarchd-rootfs-${{ matrix.device }}-api${{ matrix.vndk }}.tar.zst

  release:
    name: Create Release
    needs: build-rootfs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release
    
    - name: Generate SHA256SUMS file
      run: |
        find release -type f -name '*.tar.zst' -exec sha256sum {} \; > SHA256SUMS

    - name: Delete old release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release delete latest --yes | true
        git push --delete origin refs/tags/latest || true

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2.2.2
      with:
        name: Latest
        tag_name: latest
        files: |
          release/**/*.tar.zst
          SHA256SUMS
